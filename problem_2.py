# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibGen():
    n_1, n_2 = 1, 2  # Start from 1, 2 as per problem statement

    def fib():
        nonlocal n_1, n_2
        result = n_1
        n_1, n_2 = n_2, n_1 + n_2
        return result

    return fib


def main():
    f = fibGen()
    total_sum = 0

    while True:
        fib_value = f()
        if fib_value > 4_000_000:  # Stop when exceeding 4 million
            break
        if fib_value % 2 == 0:  # Sum only even values
            total_sum += fib_value

    print(f"Sum of even Fibonacci numbers up to 4 million: {total_sum}")


if __name__ == '__main__':
    main()